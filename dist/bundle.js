/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _assets_css_style_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\n/* harmony import */ var _assets_css_style_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_assets_css_style_scss__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _tasksTab__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);\n/* harmony import */ var _projectsTab__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9);\n/* harmony import */ var _commonTab__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);\n/**\n * @format\n */\n__webpack_require__(1);\n// normalize.css must be loaded first before app css, so disable eslint check\n/* eslint-disable import/first */\n\n\n\n\n/* eslint-enable import/first */\n\n// Event listener helpers\nfunction removeContainer(id) {\n  const elem = document.getElementById(id);\n  if (elem) elem.parentNode.removeChild(elem);\n}\n\nfunction selectTab(e) {\n  const activeClass = 'selected';\n\n  // Find menu associated with '#main-nav'\n  const mainNav = document.getElementById('main-nav');\n  const childrenArr = [...mainNav.children];\n\n  // Find currently selected item, deselect it, select clicked item\n  for (let i = 0; i < childrenArr.length; i += 1) {\n    // Should be menu we're looking for\n    if (childrenArr[i].tagName === 'UL') {\n      const ulChildrenArr = [...childrenArr[i].children];\n      for (let j = 0; j < ulChildrenArr.length; j += 1) {\n        // Once active tab is found make other tab active\n        if (ulChildrenArr[j].classList.contains(activeClass)) {\n          ulChildrenArr[j].classList.remove(activeClass);\n          e.target.classList.add(activeClass);\n          break;\n        }\n      }\n      break;\n    }\n  }\n}\n\n// Eventlisteners\n\nfunction makeTabActive(e) {\n  const activeClass = 'selected';\n\n  // Ignore click if on currently selected tab\n  if (!e.target.classList.contains(activeClass)) {\n    _commonTab__WEBPACK_IMPORTED_MODULE_3__[\"state\"].currentProject = null;\n    selectTab(e);\n\n    switch (e.target.textContent) {\n      case 'Tasks':\n        removeContainer(_commonTab__WEBPACK_IMPORTED_MODULE_3__[\"elemId\"].projectsContainerId);\n        Object(_tasksTab__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        break;\n      case 'Projects':\n        removeContainer(_commonTab__WEBPACK_IMPORTED_MODULE_3__[\"elemId\"].taskContainerId);\n        Object(_projectsTab__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        break;\n    }\n  }\n}\n\n// Support functions\n\nfunction addTabListener(target) {\n  target.addEventListener('click', e => {\n    makeTabActive(e);\n  });\n}\n\nfunction createTabMenu() {\n  const menuItems = ['Tasks', 'Projects'];\n\n  const container = document.getElementById('container');\n\n  const nav = document.createElement('nav');\n  nav.id = 'main-nav';\n\n  const ul = document.createElement('ul');\n  ul.classList.add('tabrow');\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const li = document.createElement('li');\n    li.textContent = menuItems[i];\n\n    // Make first item \"active\"\n    if (i === 0) li.classList.add('selected');\n\n    ul.appendChild(li);\n\n    addTabListener(li);\n  }\n\n  nav.appendChild(ul);\n  container.appendChild(nav);\n}\n\nfunction ready() {\n  _commonTab__WEBPACK_IMPORTED_MODULE_3__[\"state\"].loadData();\n  createTabMenu();\n  Object(_tasksTab__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n}\n\ndocument.addEventListener('DOMContentLoaded', ready);\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./node_modules/normalize.css/normalize.css?");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/assets/css/style.scss?");

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _commonTab__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n/**\n * @format\n */\n\n\nfunction buildTaskPage() {\n  _commonTab__WEBPACK_IMPORTED_MODULE_0__[\"utility\"].addSection(\n    _commonTab__WEBPACK_IMPORTED_MODULE_0__[\"utility\"].getRootElement(),\n    _commonTab__WEBPACK_IMPORTED_MODULE_0__[\"elemId\"].taskContainerId,\n  );\n\n  const sectionElem = document.getElementById(\n    _commonTab__WEBPACK_IMPORTED_MODULE_0__[\"elemId\"].taskContainerId,\n  );\n\n  _commonTab__WEBPACK_IMPORTED_MODULE_0__[\"utility\"].addTaskTable(sectionElem);\n  _commonTab__WEBPACK_IMPORTED_MODULE_0__[\"utility\"].addActionSection(sectionElem);\n  _commonTab__WEBPACK_IMPORTED_MODULE_0__[\"utility\"].addPageButtons(\n    document.getElementById(_commonTab__WEBPACK_IMPORTED_MODULE_0__[\"elemId\"].pageButtonsId),\n  );\n  _commonTab__WEBPACK_IMPORTED_MODULE_0__[\"utility\"].addFooter(sectionElem);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (buildTaskPage);\n\n\n//# sourceURL=webpack:///./src/tasksTab.js?");

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"state\", function() { return state; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elemId\", function() { return elemId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forms\", function() { return forms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resources\", function() { return resources; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"utility\", function() { return utility; });\n/* harmony import */ var date_fns_is_past__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);\n/* harmony import */ var date_fns_is_past__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(date_fns_is_past__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var date_fns_parse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);\n/* harmony import */ var date_fns_parse__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(date_fns_parse__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _todo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);\n/**\n * @format\n */\n\n\n\n\nconst state = {\n  tasks: [],\n  projects: [],\n  currentProject: null,\n  loadData() {\n    if (localStorage) {\n      const tasks = localStorage.getItem('tasks');\n      const projects = localStorage.getItem('projects');\n      if (tasks)\n        state.tasks = JSON.parse(tasks).map(task => _todo__WEBPACK_IMPORTED_MODULE_2__[\"baseTodoItem\"](task));\n      if (projects) {\n        state.projects = JSON.parse(projects).map(project =>\n          _todo__WEBPACK_IMPORTED_MODULE_2__[\"baseTodoItem\"](project)\n        );\n      }\n    } else { alert('Cannot load any data'); }\n  },\n  saveData() {\n    if (localStorage) {\n      localStorage.clear();\n      const states = state.tasks.map(task => task.exportState());\n      localStorage.setItem('tasks', JSON.stringify(states));\n      const projects = state.projects.map(project => project.exportState());\n      localStorage.setItem('projects', JSON.stringify(projects));\n    } else {\n      alert('Unable to save your tasks and projects');\n    }\n  },\n};\n\nconst elemId = {\n  containerId: 'container',\n  footerId: 'footer',\n  pageActionsId: 'page-actions',\n  pageButtonsId: 'page-buttons',\n  pageFormId: 'page-form',\n  popupContainerId: 'popup-container',\n  popupDisplayId: 'popup-show',\n  popupFormId: 'popup-form',\n  projectsContainerId: 'projects-container',\n  projectsSectionId: 'projects',\n  projectStatusBarId: 'project-bar',\n  projectTableId: 'projects-table',\n  taskContainerId: 'tasks-container',\n  tasksSectionId: 'tasks',\n  taskTableId: 'tasks-table',\n};\n\nconst resources = {\n  doneImg: 'assets/graphics/complete25x25.png',\n  openImg: 'assets/graphics/open25x25.png',\n  overdueImg: 'assets/graphics/overdue25x25.jpg',\n};\n\nconst forms = {\n  taskForm: [\n    {\n      tag: 'label',\n      attrs: [{ name: 'for', value: 'name' }],\n      text: 'Name',\n      required: null,\n    },\n    {\n      tag: 'input',\n      attrs: [{ name: 'type', value: 'text' }, { name: 'name', value: 'name' }],\n      text: '',\n      required: true,\n    },\n    {\n      tag: 'label',\n      attrs: [{ name: 'for', value: 'desc' }],\n      text: 'Description',\n    },\n    {\n      tag: 'input',\n      attrs: [{ name: 'type', value: 'text' }, { name: 'name', value: 'desc' }],\n      text: '',\n      required: true,\n    },\n    { tag: 'label', attrs: [{ name: 'for', value: 'date' }], text: 'Due Date' },\n    {\n      tag: 'input',\n      attrs: [{ name: 'type', value: 'date' }, { name: 'name', value: 'due' }],\n      text: '',\n      required: true,\n    },\n    {\n      tag: 'label',\n      attrs: [{ name: 'for', value: 'project' }],\n      text: 'project',\n    },\n    {\n      tag: 'select',\n      attrs: [{ name: 'name', value: 'project' }],\n      text: '',\n      required: false,\n    },\n    {\n      tag: 'label',\n      attrs: [{ name: 'for', value: 'priority' }],\n      text: 'Priority',\n    },\n    {\n      tag: 'input',\n      attrs: [\n        { name: 'type', value: 'number' },\n        { name: 'name', value: 'priority' },\n        { name: 'min', value: '1' },\n        { name: 'max', value: '10' },\n      ],\n      text: '',\n      required: true,\n    },\n  ],\n\n  projectForm: [\n    {\n      tag: 'label',\n      attrs: [{ name: 'for', value: 'name' }],\n      text: 'Name',\n      required: null,\n    },\n    {\n      tag: 'input',\n      attrs: [{ name: 'type', value: 'text' }, { name: 'name', value: 'name' }],\n      text: '',\n      required: true,\n    },\n    {\n      tag: 'label',\n      attrs: [{ name: 'for', value: 'desc' }],\n      text: 'Description',\n    },\n    {\n      tag: 'input',\n      attrs: [{ name: 'type', value: 'text' }, { name: 'name', value: 'desc' }],\n      text: '',\n      required: true,\n    },\n    { tag: 'label', attrs: [{ name: 'for', value: 'date' }], text: 'Due Date' },\n    {\n      tag: 'input',\n      attrs: [{ name: 'type', value: 'date' }, { name: 'name', value: 'due' }],\n      text: '',\n      required: true,\n    },\n    {\n      tag: 'label',\n      attrs: [{ name: 'for', value: 'priority' }],\n      text: 'Priority',\n    },\n    {\n      tag: 'input',\n      attrs: [\n        { name: 'type', value: 'number' },\n        { name: 'name', value: 'priority' },\n        { name: 'min', value: '1' },\n        { name: 'max', value: '10' },\n      ],\n      text: '',\n      required: true,\n    },\n  ],\n};\n\nconst utility = {\n  // Create Functions -- return an element\n  createButton(text) {\n    const button = document.createElement('button');\n    button.textContent = text;\n    button.classList.add('btn');\n    return button;\n  },\n\n  createModalButton(type, id, classes, text, callback) {\n    const button = document.createElement('button');\n    button.setAttribute('type', type);\n    button.id = id;\n    for (let i = 0; i < classes.length; i += 1) {\n      button.classList.add(classes[i]);\n    }\n    button.textContent = text;\n    button.addEventListener('click', callback);\n    return button;\n  },\n\n  createDataCell(tag, text, hidden) {\n    const td = document.createElement(tag);\n    if (hidden) td.classList.add('hidden');\n    td.textContent = text;\n    return td;\n  },\n\n  createSection: function createSection(id) {\n    const section = document.createElement('section');\n    section.id = id;\n    return section;\n  },\n\n  createStatusCell(item) {\n    const td = document.createElement('td');\n    const img = document.createElement('img');\n    img.addEventListener('click', utility.toggleComplete);\n    td.appendChild(img);\n\n    switch (item.get('done')) {\n      case false:\n        if (date_fns_is_past__WEBPACK_IMPORTED_MODULE_0___default()(date_fns_parse__WEBPACK_IMPORTED_MODULE_1___default()(item.get('due')))) {\n          img.setAttribute('src', resources.overdueImg);\n        } else {\n          img.setAttribute('src', resources.openImg);\n        }\n        break;\n      case true:\n        img.setAttribute('src', resources.doneImg);\n        break;\n    }\n    return td;\n  },\n\n  createTable(id) {\n    const table = document.createElement('table');\n    table.id = id;\n    return table;\n  },\n\n  createTaskRow(task, index) {\n    const propOrder = ['name', 'desc', 'due', 'project', 'priority'];\n    const tr = document.createElement('tr');\n    // value of done is represented by an icon\n    tr.appendChild(utility.createStatusCell(task));\n\n    for (let i = 0; i < propOrder.length; i += 1) {\n      const prop = propOrder[i];\n      tr.appendChild(utility.createDataCell('td', task.get(prop)));\n      if (prop === 'name')\n        tr.childNodes[1].addEventListener('click', utility.addEditTaskForm);\n    }\n\n    const button = utility.createButton('Delete');\n    button.addEventListener('click', utility.deleteTask);\n    utility.addActionButton(tr, button);\n    // Put index of utility object in tasks array and hide it\n    tr.appendChild(utility.createDataCell('td', index, true));\n    return tr;\n  },\n\n  createTaskTable(projectName) {\n    const colHeaders = [\n      '',\n      'Name',\n      'Description',\n      'Due Date',\n      'Project',\n      'Priority',\n      'Action',\n    ];\n    const table = utility.createTable(elemId.taskTableId);\n    utility.addTableHeader(table, colHeaders);\n    table.append(document.createElement('tbody'));\n    utility.addProjectTasks(table, projectName);\n    return table;\n  },\n\n  // Add functions, add child element(s) to a parent element\n  addActionButton(tr, button) {\n    const td = document.createElement('td');\n    td.appendChild(button);\n    tr.appendChild(td);\n  },\n\n  addFooter(parentElem) {\n    const images = [resources.openImg, resources.doneImg, resources.overdueImg];\n    const legend = ['Undone', 'Done', 'Overdue'];\n    const footer = document.createElement('footer');\n    footer.id = elemId.footerId;\n\n    for (let i = 0; i < images.length; i += 1) {\n      const img = document.createElement('img');\n      img.src = images[i];\n      footer.appendChild(img);\n      const p = document.createElement('p');\n      p.textContent = legend[i];\n      footer.appendChild(p);\n    }\n    parentElem.appendChild(footer);\n  },\n\n  addModalForm(formItems, saveButton, data = null, hidden = null) {\n    // This div sets up form to be 'modal' by CSS\n    const displayContainer = document.createElement('div');\n    displayContainer.id = elemId.popupDisplayId;\n    displayContainer.classList.add('block');\n\n    const popupContainer = document.createElement('div');\n    popupContainer.id = elemId.popupContainerId;\n    displayContainer.appendChild(popupContainer);\n\n    const form = document.createElement('form');\n    form.id = elemId.popupFormId;\n    utility.buildForm(form, formItems, data, hidden);\n\n    form.appendChild(saveButton);\n    const cancelButton = utility.createButton('Cancel');\n    cancelButton.addEventListener('click', utility.closeModal);\n    form.appendChild(cancelButton);\n    popupContainer.appendChild(form);\n\n    utility.getRootElement().appendChild(displayContainer);\n  },\n\n  addActionSection(parentElem) {\n    const ids = [elemId.pageButtonsId];\n    const parentDiv = document.createElement('div');\n    parentDiv.id = elemId.pageActionsId;\n\n    for (let i = 0; i < ids.length; i += 1) {\n      const div = document.createElement('div');\n      div.id = ids[i];\n      parentDiv.appendChild(div);\n    }\n    parentElem.appendChild(parentDiv);\n  },\n\n  addPageButtons(parentElem) {\n    let button = utility.createButton('Add Task');\n    button.addEventListener('click', utility.addTaskForm);\n    parentElem.appendChild(button);\n\n    button = utility.createButton('Save');\n    button.addEventListener('click', utility.save);\n    parentElem.appendChild(button);\n  },\n\n  addProjectTasks(table, projectName) {\n    const tasks = state.tasks.filter(\n      item => projectName === null || item.get('project') === projectName\n    );\n    // Need to do this since on the projects tab the row index will not\n    // neccesarily equal the array index when the user displays project tasks\n    const indices = utility.buildIndices(projectName);\n    const tbody = table.querySelector('tbody');\n\n    for (let i = 0; i < tasks.length; i += 1) {\n      const task = tasks[i];\n      const tr = utility.createTaskRow(task, indices[i]);\n      tbody.appendChild(tr);\n    }\n  },\n\n  addSection(parentElem, id) {\n    parentElem.appendChild(utility.createSection(id));\n  },\n\n  addTableHeader(parentElem, colHeaders) {\n    const thead = document.createElement('thead');\n    const tr = document.createElement('tr');\n\n    for (let i = 0; i < colHeaders.length; i += 1) {\n      tr.appendChild(utility.createDataCell('th', colHeaders[i]));\n    }\n    thead.appendChild(tr);\n    parentElem.appendChild(thead);\n  },\n\n  addTaskTable(parentElem, projectName = null) {\n    const table = utility.createTaskTable(projectName);\n    parentElem.appendChild(table);\n  },\n\n  // Support functions\n  setAttributes(tag, attrs, elem, data) {\n    for (let i = 0; i < attrs.length; i += 1) {\n      const { name, value } = attrs[i];\n      elem.setAttribute(name, value);\n      if (tag === 'input' && name === 'name') {\n        if (data) elem.value = data.get(value);\n      } else if (tag === 'select' && name === 'name') {\n      }\n    }\n  },\n\n  addHiddenFields(form, hidden) {\n    for (let i = 0; i < hidden.length; i += 1) {\n      const hiddenInput = document.createElement('input');\n      hiddenInput.setAttribute('type', 'hidden');\n      hiddenInput.setAttribute('name', hidden[i].name);\n      hiddenInput.setAttribute('value', hidden[i].value);\n      form.appendChild(hiddenInput);\n    }\n  },\n\n  addProjectOptions(item = null) {\n    // Add a dropdown list of current projects, if any\n    const form = document.getElementById(elemId.popupFormId);\n    const selectElem = form.querySelector('select[name=\"project\"]');\n\n    const emptyOption = document.createElement('option');\n    emptyOption.setAttribute('value', '');\n    emptyOption.textContent = '';\n    selectElem.appendChild(emptyOption);\n\n    for (let i = 0; i < state.projects.length; i += 1) {\n      const option = state.projects[i].get('name');\n      const optionElem = document.createElement('option');\n      optionElem.setAttribute('value', option);\n      if (item && option === item.get('project')) {\n        optionElem.setAttribute('selected', 'selected');\n      } else if (\n        state.currentProject !== null &&\n        option === state.currentProject.get('name')\n      ) {\n        optionElem.setAttribute('selected', 'selected');\n      }\n      optionElem.textContent = option;\n      selectElem.appendChild(optionElem);\n    }\n  },\n\n  buildButton(form, type, id, classes, text, callback) {\n    const button = document.createElement('button');\n    button.setAttribute('type', type);\n    button.id = id;\n    for (let i = 0; i < classes.length; i += 1) {\n      button.classList.add(classes[i]);\n    }\n    button.textContent = text;\n    form.appendChild(button);\n    button.addEventListener('click', e => {\n      callback(e, form);\n    });\n  },\n\n  buildForm(form, items, data = null, hidden = null) {\n    // Take array defining an HTML form item and turn it into HTML Element\n    // with all its attributes\n    if (hidden) utility.addHiddenFields(form, hidden);\n    for (let i = 0; i < items.length; i += 1) {\n      const { tag, attrs } = items[i];\n      const elem = document.createElement(items[i].tag);\n      if (items[i].tag === 'input') elem.classList.add('form-input');\n      utility.setAttributes(tag, attrs, elem, data);\n      if (items[i].required) elem.setAttribute('required', 'required');\n      if (items[i].text !== '') elem.textContent = items[i].text;\n      form.appendChild(elem);\n      form.appendChild(document.createElement('br'));\n    }\n  },\n\n  buildIndices(projectName) {\n    const mapCallback = function(item, index) {\n      return projectName == null || item.get('project') === projectName\n        ? index\n        : null;\n    };\n    // Strip out nulls from above, leaving us with the indices we want\n    return state.tasks\n      .map((item, index) => mapCallback(item, index))\n      .filter(item => item !== null);\n  },\n\n  deleteFooter() {\n    const footer = document.getElementById(elemId.footerId);\n    footer.parentNode.removeChild(footer);\n  },\n\n  deleteForm(formId) {\n    const form = document.getElementById(formId);\n    const parent = form.parentNode;\n    parent.removeChild(form);\n  },\n\n  deleteModal() {\n    const modal = document.getElementById(elemId.popupDisplayId);\n    modal.parentNode.removeChild(modal);\n  },\n\n  getArrayIndex(row) {\n    const children = row.childNodes;\n    // Last element should be hidden TD containing array index\n    return parseInt(children[children.length - 1].textContent, 10);\n  },\n\n  getFormData(form) {\n    const itemIndex = this.getTextValue(form, 'itemindex');\n    const name = this.getTextValue(form, 'name');\n    const desc = this.getTextValue(form, 'desc');\n    const due = this.getTextValue(form, 'due');\n    const project = this.getTextValue(form, 'project');\n    const priority = this.getTextValue(form, 'priority');\n\n    return {\n      name,\n      desc,\n      due,\n      project,\n      priority,\n      done: false,\n      itemindex: itemIndex,\n    };\n  },\n\n  getRootElement() {\n    return document.getElementById(elemId.containerId);\n  },\n\n  getTextValue(form, field) {\n    const inputElem = form.querySelector(`input[name=${field}]`);\n    let value = null;\n    if (inputElem !== null) {\n      value = inputElem.value;\n    } else {\n      const selectElem = form.querySelector(`select[name=${field}]`);\n      if (selectElem !== null) {\n        value = selectElem.value;\n      }\n    }\n    return value;\n  },\n\n  // Event Listener helpers\n  delPageButtons() {\n    const elem = document.getElementById(elemId.pageButtonsId);\n\n    while (elem.firstChild) {\n      elem.removeChild(elem.firstChild);\n    }\n  },\n\n  renderTask(index) {\n    const taskIndex = index >= 0 ? index : state.tasks.length - 1;\n    const tr = utility.createTaskRow(state.tasks[taskIndex], taskIndex);\n    const table = document.getElementById(elemId.taskTableId);\n    const tbody = table.querySelector('tbody');\n\n    if (index >= 0) {\n      tbody.replaceChild(tr, tbody.childNodes[index]);\n    } else {\n      tbody.appendChild(tr);\n    }\n  },\n\n  updateHiddenIndices(sibling, inc = -1) {\n    let aSibling = sibling;\n    while (aSibling) {\n      const children = sibling.childNodes;\n      // Last child should be hidden node containing index into tasks\n      const indexTD = children[children.length - 1];\n      indexTD.textContent = parseInt(indexTD.textContent, 10) + inc;\n      aSibling = aSibling.nextSibling;\n    }\n  },\n\n  // Event Listeners\n  addTaskForm(e) {\n    const saveButton = utility.createModalButton(\n      'submit',\n      'add-task',\n      ['btn'],\n      'Add Task',\n      utility.handleAddTask\n    );\n    utility.addModalForm(forms.taskForm, saveButton);\n    utility.addProjectOptions();\n  },\n\n  closeModal(e) {\n    utility.deleteModal();\n  },\n\n  deleteTask(e) {\n    const table = document.getElementById(elemId.taskTableId);\n    const tbody = table.querySelector('tbody');\n    const row = e.target.parentNode.parentNode;\n    const sibling = e.target.parentNode.parentNode.nextSibling;\n    const taskIndex = utility.getArrayIndex(row);\n    state.tasks.splice(taskIndex, 1);\n    tbody.removeChild(row);\n    // Now that the task is deleted from the array, the hidden indices will\n    // be off, so they need to be updated\n    utility.updateHiddenIndices(sibling);\n  },\n\n  addEditTaskForm(e) {\n    const taskIndex = utility.getArrayIndex(e.target.parentNode);\n    const hidden = [{ name: 'itemindex', value: taskIndex }];\n    const updateButton = utility.createModalButton(\n      'submit',\n      'update-task',\n      ['btn'],\n      'Update Task',\n      utility.handleUpdateTask\n    );\n    utility.addModalForm(\n      forms.taskForm,\n      updateButton,\n      state.tasks[taskIndex],\n      hidden\n    );\n    utility.addProjectOptions(state.tasks[taskIndex]);\n  },\n\n  handleAddTask(e) {\n    e.preventDefault();\n    const form = e.target.parentNode;\n    const formData = utility.getFormData(form);\n    delete formData.itemindex;\n    state.tasks.push(_todo__WEBPACK_IMPORTED_MODULE_2__[\"baseTodoItem\"](formData));\n    utility.deleteModal();\n    utility.renderTask(-1);\n  },\n\n  handleUpdateTask(e) {\n    e.preventDefault();\n    const form = e.target.parentNode;\n    const formData = utility.getFormData(form);\n    const taskIndex = parseInt(formData.itemindex, 10);\n    delete formData.itemindex;\n    state.tasks[parseInt(taskIndex, 10)] = _todo__WEBPACK_IMPORTED_MODULE_2__[\"baseTodoItem\"](formData);\n    utility.deleteModal();\n    utility.renderTask(taskIndex);\n  },\n\n  save(e) {\n    state.saveData();\n  },\n\n  toggleComplete(e) {\n    const img = e.target;\n    // tr->tbody->table\n    const tableId = e.target.parentNode.parentNode.parentNode.parentNode.id;\n    const cells = e.target.parentNode.parentNode.childNodes;\n    const index = parseInt(cells[cells.length - 1].textContent, 10);\n\n    const itemArray =\n      tableId === elemId.taskTableId ? state.tasks : state.projects;\n\n    if (itemArray[index].get('done')) {\n      if (date_fns_is_past__WEBPACK_IMPORTED_MODULE_0___default()(date_fns_parse__WEBPACK_IMPORTED_MODULE_1___default()(itemArray[index].get('due')))) {\n        img.src = resources.overdueImg;\n      } else {\n        img.src = resources.openImg;\n      }\n    } else {\n      img.src = resources.doneImg;\n    }\n    itemArray[index].toggleDone();\n    img.addEventListener('click', utility.toggleComplete);\n  },\n};\n\n\n\n\n//# sourceURL=webpack:///./src/commonTab.js?");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(6)\n\n/**\n * @category Common Helpers\n * @summary Is the given date in the past?\n *\n * @description\n * Is the given date in the past?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isPast (dirtyDate) {\n  return parse(dirtyDate).getTime() < new Date().getTime()\n}\n\nmodule.exports = isPast\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_past/index.js?");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

eval("var isDate = __webpack_require__(7)\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\nvar DEFAULT_ADDITIONAL_DIGITS = 2\n\nvar parseTokenDateTimeDelimeter = /[T ]/\nvar parseTokenPlainTime = /:/\n\n// year tokens\nvar parseTokenYY = /^(\\d{2})$/\nvar parseTokensYYY = [\n  /^([+-]\\d{2})$/, // 0 additional digits\n  /^([+-]\\d{3})$/, // 1 additional digit\n  /^([+-]\\d{4})$/ // 2 additional digits\n]\n\nvar parseTokenYYYY = /^(\\d{4})/\nvar parseTokensYYYYY = [\n  /^([+-]\\d{4})/, // 0 additional digits\n  /^([+-]\\d{5})/, // 1 additional digit\n  /^([+-]\\d{6})/ // 2 additional digits\n]\n\n// date tokens\nvar parseTokenMM = /^-(\\d{2})$/\nvar parseTokenDDD = /^-?(\\d{3})$/\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/\nvar parseTokenWww = /^-?W(\\d{2})$/\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/\n\n// time tokens\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\n\n// timezone tokens\nvar parseTokenTimezone = /([Z+-].*)$/\nvar parseTokenTimezoneZ = /^(Z)$/\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/\n\n/**\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If all above fails, the function passes the given argument to Date constructor.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {Object} [options] - the object with options\n * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parse('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Parse string '+02014101',\n * // if the additional number of digits in the extended year format is 1:\n * var result = parse('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nfunction parse (argument, dirtyOptions) {\n  if (isDate(argument)) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (typeof argument !== 'string') {\n    return new Date(argument)\n  }\n\n  var options = dirtyOptions || {}\n  var additionalDigits = options.additionalDigits\n  if (additionalDigits == null) {\n    additionalDigits = DEFAULT_ADDITIONAL_DIGITS\n  } else {\n    additionalDigits = Number(additionalDigits)\n  }\n\n  var dateStrings = splitDateString(argument)\n\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits)\n  var year = parseYearResult.year\n  var restDateString = parseYearResult.restDateString\n\n  var date = parseDate(restDateString, year)\n\n  if (date) {\n    var timestamp = date.getTime()\n    var time = 0\n    var offset\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time)\n    }\n\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone)\n    } else {\n      // get offset accurate to hour in timezones that change offset\n      offset = new Date(timestamp + time).getTimezoneOffset()\n      offset = new Date(timestamp + time + offset * MILLISECONDS_IN_MINUTE).getTimezoneOffset()\n    }\n\n    return new Date(timestamp + time + offset * MILLISECONDS_IN_MINUTE)\n  } else {\n    return new Date(argument)\n  }\n}\n\nfunction splitDateString (dateString) {\n  var dateStrings = {}\n  var array = dateString.split(parseTokenDateTimeDelimeter)\n  var timeString\n\n  if (parseTokenPlainTime.test(array[0])) {\n    dateStrings.date = null\n    timeString = array[0]\n  } else {\n    dateStrings.date = array[0]\n    timeString = array[1]\n  }\n\n  if (timeString) {\n    var token = parseTokenTimezone.exec(timeString)\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '')\n      dateStrings.timezone = token[1]\n    } else {\n      dateStrings.time = timeString\n    }\n  }\n\n  return dateStrings\n}\n\nfunction parseYear (dateString, additionalDigits) {\n  var parseTokenYYY = parseTokensYYY[additionalDigits]\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits]\n\n  var token\n\n  // YYYY or ±YYYYY\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString)\n  if (token) {\n    var yearString = token[1]\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    }\n  }\n\n  // YY or ±YYY\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString)\n  if (token) {\n    var centuryString = token[1]\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    }\n  }\n\n  // Invalid ISO-formatted year\n  return {\n    year: null\n  }\n}\n\nfunction parseDate (dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n\n  var token\n  var date\n  var month\n  var week\n\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0)\n    date.setUTCFullYear(year)\n    return date\n  }\n\n  // YYYY-MM\n  token = parseTokenMM.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    date.setUTCFullYear(year, month)\n    return date\n  }\n\n  // YYYY-DDD or YYYYDDD\n  token = parseTokenDDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    var dayOfYear = parseInt(token[1], 10)\n    date.setUTCFullYear(year, 0, dayOfYear)\n    return date\n  }\n\n  // YYYY-MM-DD or YYYYMMDD\n  token = parseTokenMMDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    var day = parseInt(token[2], 10)\n    date.setUTCFullYear(year, month, day)\n    return date\n  }\n\n  // YYYY-Www or YYYYWww\n  token = parseTokenWww.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    return dayOfISOYear(year, week)\n  }\n\n  // YYYY-Www-D or YYYYWwwD\n  token = parseTokenWwwD.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    var dayOfWeek = parseInt(token[2], 10) - 1\n    return dayOfISOYear(year, week, dayOfWeek)\n  }\n\n  // Invalid ISO-formatted date\n  return null\n}\n\nfunction parseTime (timeString) {\n  var token\n  var hours\n  var minutes\n\n  // hh\n  token = parseTokenHH.exec(timeString)\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n\n  // hh:mm or hhmm\n  token = parseTokenHHMM.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseFloat(token[2].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE\n  }\n\n  // hh:mm:ss or hhmmss\n  token = parseTokenHHMMSS.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseInt(token[2], 10)\n    var seconds = parseFloat(token[3].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE +\n      seconds * 1000\n  }\n\n  // Invalid ISO-formatted time\n  return null\n}\n\nfunction parseTimezone (timezoneString) {\n  var token\n  var absoluteOffset\n\n  // Z\n  token = parseTokenTimezoneZ.exec(timezoneString)\n  if (token) {\n    return 0\n  }\n\n  // ±hh\n  token = parseTokenTimezoneHH.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  // ±hh:mm or ±hhmm\n  token = parseTokenTimezoneHHMM.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10)\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  return 0\n}\n\nfunction dayOfISOYear (isoYear, week, day) {\n  week = week || 0\n  day = day || 0\n  var date = new Date(0)\n  date.setUTCFullYear(isoYear, 0, 4)\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n\nmodule.exports = parse\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/parse/index.js?");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

eval("/**\n * @category Common Helpers\n * @summary Is the given argument an instance of Date?\n *\n * @description\n * Is the given argument an instance of Date?\n *\n * @param {*} argument - the argument to check\n * @returns {Boolean} the given argument is an instance of Date\n *\n * @example\n * // Is 'mayonnaise' a Date?\n * var result = isDate('mayonnaise')\n * //=> false\n */\nfunction isDate (argument) {\n  return argument instanceof Date\n}\n\nmodule.exports = isDate\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_date/index.js?");

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getter\", function() { return getter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setter\", function() { return setter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggler\", function() { return toggler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"emailer\", function() { return emailer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"texter\", function() { return texter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"baseTodoItem\", function() { return baseTodoItem; });\n/**\n * @format\n */\nconst toggler = state => ({\n  toggleDone: () => { state.done = (!state.done); },\n});\n\nconst emailer = state => ({\n  email: () => { alert(`${state.email} was notified ${state.title} was completed.`); },\n});\n\nconst texter = state => ({\n  text: () => { alert(`${state.recpient} was notified ${state.title} was completed.`); },\n});\n\nconst getter = state => ({\n  get: prop => state[prop],\n});\n\nconst setter = state => ({\n  set: (prop, value) => { state[prop] = value; },\n});\n\nconst exporter = state => ({\n  exportState: () => Object.assign({}, state),\n});\n\n\nfunction baseTodoItem(state) {\n  return Object.assign({}, getter(state), setter(state), toggler(state), exporter(state));\n}\n\n\n\n\n//# sourceURL=webpack:///./src/todo.js?");

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _todo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);\n/* harmony import */ var _commonTab__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);\n/**\n * @format\n */\n__webpack_require__(1);\n\n\n\n\nconst projectGlobal = {\n  projectBarLabels: ['Project:', 'Desc:', 'Due:', 'Priority:', 'Complete:'],\n};\n\nconst utility = {\n  // Add functions - functions that add children to a parent element\n\n  addPageButtons(parentElem) {\n    const button = _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].createButton('Add Project');\n    button.addEventListener('click', utility.addProjectForm);\n    parentElem.appendChild(button);\n  },\n\n  addProjectBar(parentElem) {\n    parentElem.appendChild(utility.createProjectBar());\n  },\n\n  addProjectTable(parentElem) {\n    const colHeaders = ['', 'Name', 'Due Date', 'Action'];\n    const table = document.createElement('table');\n    table.id = _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].projectTableId;\n\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].addTableHeader(table, colHeaders);\n    const tbody = document.createElement('tbody');\n    table.appendChild(tbody);\n\n    for (let i = 0; i < _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"state\"].projects.length; i += 1) {\n      const tr = utility.createProjectRow(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"state\"].projects[i], i);\n      tbody.appendChild(tr);\n    }\n\n    parentElem.appendChild(table);\n  },\n\n  // Create functions - functions that return an element\n  createProjectBar() {\n    const section = document.createElement('section');\n    section.id = _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].projectStatusBarId;\n\n    for (let i = 0; i < projectGlobal.projectBarLabels.length; i += 1) {\n      const span = document.createElement('span');\n      span.textContent = projectGlobal.projectBarLabels[i];\n      section.appendChild(span);\n    }\n\n    section.appendChild(document.createElement('hr'));\n\n    return section;\n  },\n\n  createProjectRow(project, index) {\n    const propOrder = ['name', 'due'];\n    const tr = document.createElement('tr');\n    tr.appendChild(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].createStatusCell(project));\n\n    for (let i = 0; i < propOrder.length; i += 1) {\n      const prop = propOrder[i];\n      tr.appendChild(\n        _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].createDataCell('td', project.get(prop)),\n      );\n      if (prop === 'name')\n        tr.childNodes[1].addEventListener('click', utility.loadProject);\n    }\n\n    const button = _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].createButton('Delete');\n    button.addEventListener('click', utility.deleteProject);\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].addActionButton(tr, button);\n    // Put index of utility object in tasks array and hide it\n    tr.appendChild(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].createDataCell('td', index, true));\n    return tr;\n  },\n\n  // Support functions\n  //\n  buildProjectSection() {\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].addSection(\n      document.getElementById(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].projectsContainerId),\n      _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].projectsSectionId,\n    );\n    utility.addProjectTable(\n      document.getElementById(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].projectsSectionId),\n    );\n  },\n\n  buildTaskSection() {\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].addSection(\n      document.getElementById(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].projectsContainerId),\n      _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].tasksSectionId,\n    );\n    utility.addProjectBar(\n      document.getElementById(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].tasksSectionId),\n    );\n\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].addTaskTable(\n      document.getElementById(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].tasksSectionId),\n    );\n  },\n\n  calcPercentComplete(projectName) {\n    const tasks = _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"state\"].tasks.filter(\n      item => projectName === null || item.get('project') === projectName,\n    );\n    const numTasks = tasks.length;\n    const numComplete = tasks.filter(item => item.get('done') === true).length;\n\n    return Math.round(numTasks === 0 ? 0 : numComplete / numTasks * 100);\n  },\n\n  renderProject(index) {\n    const projectIndex =\n      index >= 0 ? index : _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"state\"].projects.length - 1;\n    const tr = utility.createProjectRow(\n      _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"state\"].projects[projectIndex],\n      projectIndex,\n    );\n    const parentElem = document.getElementById(\n      _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].projectTableId,\n    );\n    const tbody = parentElem.querySelector('tbody');\n\n    if (index >= 0) {\n      // Add one to allow for thead\n      parentElem.replaceChild(tr, parentElem.childNodes[index + 1]);\n    } else {\n      tbody.appendChild(tr);\n    }\n  },\n\n  updateProjectBar(project) {\n    if (project === null) {\n      const parentElem = document.getElementById(\n        _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].tasksSectionId,\n      );\n      const section = utility.createProjectBar();\n      parentElem.replaceChild(\n        section,\n        document.getElementById(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].projectStatusBarId),\n      );\n      return;\n    }\n    const propOrder = ['name', 'desc', 'due', 'priority'];\n    const section = document.createElement('section');\n    section.id = _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].projectStatusBarId;\n\n    for (let i = 0; i < propOrder.length; i += 1) {\n      const span = document.createElement('span');\n      span.textContent = `${projectGlobal.projectBarLabels[i]} ${project.get(\n        propOrder[i],\n      )}`;\n      section.appendChild(span);\n    }\n    const percentComplete = utility.calcPercentComplete(project.get('name'));\n    const span = document.createElement('span');\n    span.textContent = `${\n      projectGlobal.projectBarLabels[projectGlobal.projectBarLabels.length - 1]\n    } ${percentComplete}%`;\n    section.appendChild(span);\n    section.appendChild(document.createElement('hr'));\n\n    const parentElem = document.getElementById(\n      _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].tasksSectionId,\n    );\n    parentElem.replaceChild(\n      section,\n      document.getElementById(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].projectStatusBarId),\n    );\n  },\n\n  // Event listener helpers\n\n  deleteProjectTasks(projectName) {\n    // Every splice moves items to a new index\n    let accum = 0;\n    const indices = _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].buildIndices(projectName);\n    for (let i = 0; i < indices.length; i += 1) {\n      _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"state\"].tasks.splice(indices[i] - accum, 1);\n      accum += 1;\n    }\n  },\n\n  deleteTaskTable() {\n    const table = document.getElementById(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].taskTableId);\n    table.parentNode.removeChild(table);\n  },\n\n  // Event listeners\n\n  addProjectForm(e) {\n    const saveButton = _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].createModalButton(\n      'submit',\n      'add-project',\n      ['btn'],\n      'Add Project',\n      utility.handleSaveProject,\n    );\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].addModalForm(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"forms\"].projectForm, saveButton);\n  },\n\n  deleteProject(e) {\n    const table = document.getElementById(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].projectTableId);\n    const tbody = table.querySelector('tbody');\n    const row = e.target.parentNode.parentNode;\n    const sibling = e.target.parentNode.parentNode.nextSibling;\n    const projectIndex = _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].getArrayIndex(row);\n    const project = _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"state\"].projects[projectIndex];\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"state\"].projects.splice(projectIndex, 1);\n    tbody.removeChild(row);\n    // Once project is deleted from the arrey, the hidden indices will\n    // be off, so they need to be updated\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].updateHiddenIndices(sibling);\n    // Delete tasks associated with this project\n    utility.deleteProjectTasks(project.get('name'));\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"state\"].currentProject = null;\n    utility.deleteTaskTable();\n    utility.updateProjectBar(project);\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].addTaskTable(\n      document.getElementById(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].tasksSectionId),\n    );\n  },\n\n  handleContainerClicks(e) {\n    utility.updateProjectBar(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"state\"].currentProject);\n  },\n\n  handleSaveProject(e) {\n    e.preventDefault();\n    const form = e.target.parentNode;\n    const formData = _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].getFormData(form);\n    delete formData.itemindex;\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"state\"].projects.push(_todo__WEBPACK_IMPORTED_MODULE_0__[\"baseTodoItem\"](formData));\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].deleteModal();\n    utility.renderProject(-1);\n  },\n\n  loadProject(e) {\n    // Display all associated tasks for a project\n    const row = e.target.parentNode;\n    const index = _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].getArrayIndex(row);\n    const project = _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"state\"].projects[index];\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"state\"].currentProject = project;\n    utility.updateProjectBar(project);\n    const parentElem = document.getElementById(\n      _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].tasksSectionId,\n    );\n    const tableElem = document.getElementById(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].taskTableId);\n    const taskTable = _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].createTaskTable(project.get('name'));\n    parentElem.replaceChild(taskTable, tableElem);\n  },\n};\n\nfunction buildProjectPage() {\n  _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"state\"].currentProject = null;\n\n  // Add Container for projects and tasks\n  _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].addSection(\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].getRootElement(),\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].projectsContainerId,\n  );\n  const projectContainer = document.getElementById(\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].projectsContainerId,\n  );\n  projectContainer.addEventListener('click', utility.handleContainerClicks);\n\n  utility.buildProjectSection();\n  utility.buildTaskSection();\n  const taskContainer = document.getElementById(\n    _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].tasksSectionId,\n  );\n  _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].addActionSection(taskContainer);\n  utility.addPageButtons(\n    document.getElementById(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].pageButtonsId),\n  );\n  _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].addPageButtons(\n    document.getElementById(_commonTab__WEBPACK_IMPORTED_MODULE_1__[\"elemId\"].pageButtonsId),\n  );\n  _commonTab__WEBPACK_IMPORTED_MODULE_1__[\"utility\"].addFooter(projectContainer);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (buildProjectPage);\n\n\n//# sourceURL=webpack:///./src/projectsTab.js?");

/***/ })
/******/ ]);